name: Build/release

on:
  push:
    tags:
    - 'v*'

jobs:
  release:
    runs-on: ${{ matrix.os }}

    permissions:
      contents: write

    # Platforms to build on/for
    strategy:
      matrix:
        os: [macos-latest, ubuntu-20.04, windows-latest]
      fail-fast: false

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 23

      - name: Add code signing dependencies
        if: runner.os == 'macOS'
        run: |
          echo "${{ secrets.APPLE_DEV_ID_APP }}" | base64 --decode -o ${{ runner.temp }}/AppleCSC.p12
          echo CSC_LINK=${{ runner.temp }}/AppleCSC.p12 >> $GITHUB_ENV
          echo CSC_KEY_PASSWORD=${{ secrets.APPLE_DEV_ID_APP_PASS }} >> $GITHUB_ENV
          echo "${{ secrets.APPLE_API_KEY }}" | base64 --decode -o ${{ runner.temp }}/AppStoreConnect.p8
          echo APPLE_API_KEY=${{ runner.temp }}/AppStoreConnect.p8 >> $GITHUB_ENV
          echo APPLE_API_KEY_ID=${{ secrets.APPLE_API_KEY_ID }} >> $GITHUB_ENV
          echo APPLE_API_ISSUER=${{ secrets.APPLE_API_ISSUER }} >> $GITHUB_ENV

      - name: Build/release Electron app
        timeout-minutes: 15
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install --ignore-scripts
          echo THINGIVERSE_CLIENT_ID=${{ secrets.THINGIVERSE_CLIENT_ID }} > .env
          npm run build
          npx electron-builder --publish always

      # Only run on macOS to calculate hashes and upload to artifact storage
      - name: Calculate macOS SHA256 hashes
        if: runner.os == 'macOS'
        shell: bash
        run: |
          version=$(echo ${{ github.ref }} | sed 's|^refs/tags/v||')
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "shaosxarm=$(shasum -a 256 PubMan-$version-arm64.dmg | awk '{print $1}')" >> $GITHUB_OUTPUT
          echo "shaosxintel=$(shasum -a 256 PubMan-$version.dmg | awk '{print $1}')" >> $GITHUB_OUTPUT

      # Only run on Linux to calculate Linux hash
      - name: Calculate Linux SHA256
        if: runner.os == 'Linux'
        shell: bash
        run: |
          version=$(echo ${{ github.ref }} | sed 's|^refs/tags/v||')
          echo "shalinux=$(sha256sum PubMan-$version.AppImage | awk '{print $1}')" >> $GITHUB_OUTPUT

      # Upload hash values as artifacts to be used in the update-homebrew job
      - name: Upload hashes as artifacts
        if: runner.os == 'macOS' || runner.os == 'Linux'
        uses: actions/upload-artifact@v3
        with:
          name: hashes-${{ runner.os }}
          path: ${{ github.output_path }}
          retention-days: 1

  update-homebrew:
    needs: release
    runs-on: ubuntu-20.04
    steps:
      - name: Download macOS hashes
        uses: actions/download-artifact@v3
        with:
          name: hashes-macOS
          path: ./macos-hashes

      - name: Download Linux hashes
        uses: actions/download-artifact@v3
        with:
          name: hashes-Linux
          path: ./linux-hashes

      - name: Checkout homebrew-pubman
        uses: actions/checkout@v4
        with:
          repository: DrawnToDigital/homebrew-pubman
          path: homebrew-pubman
          token: ${{ secrets.HOMEBREW_TAP_TOKEN }}

      - name: Update Cask
        shell: bash
        run: |
          # Load values from artifacts
          version=$(grep 'version=' ./macos-hashes/github_output | cut -d= -f2)
          shaosxarm=$(grep 'shaosxarm=' ./macos-hashes/github_output | cut -d= -f2)
          shaosxintel=$(grep 'shaosxintel=' ./macos-hashes/github_output | cut -d= -f2)
          shalinux=$(grep 'shalinux=' ./linux-hashes/github_output | cut -d= -f2)

          cd homebrew-pubman

          # Update version and SHA256
          sed -i "s|version \".*\"|version \"$version\"|" Casks/pubman.rb
          sed -i "s|sha256 arm:   \".*\"|sha256 arm:   \"$shaosxarm\"|" Casks/pubman.rb
          sed -i "s|intel: \".*\"|intel: \"$shaosxintel\"|" Casks/pubman.rb
          sed -i "s|version \".*\"|version \"$version\"|" Formula/pubman-linux.rb
          sed -i "s|sha256 \".*\"|sha256 \"$shalinux\"|" Formula/pubman-linux.rb

          # Commit and push changes
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add Casks/pubman.rb Formula/pubman-linux.rb
          git commit -m "Update cask to version $version"
          git push